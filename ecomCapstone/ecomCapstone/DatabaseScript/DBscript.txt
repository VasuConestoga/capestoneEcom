Instructions:
1- Open SSMS or any other Sql sever studio 
2- Get Connect to the DB server 
3- Copy the Sql Code in the Query editor 
4- Execute the Code to create relevant database and Tables.

Code :


  IF EXISTS (SELECT name FROM master.dbo.sysdatabases 
    WHERE name = N'ecom')
	BEGIN
	DROP DATABASE ecom
	END
	ELSE
	BEGIN 
	 CREATE DATABASE ecom
	END



USE [ecom]
GO

CREATE TABLE [dbo].[Registration](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[Name] [varchar](500) NULL,
	[Email] [varchar](1000) NOT NULL,
	[Password] [varchar](500) NOT NULL,
	[IsActive] [bit] NULL,
	[CreatedOn] [datetime] NULL,
	[UpdatedOn] [datetime] NULL,
PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO

ALTER TABLE [dbo].[Registration] ADD  DEFAULT ((0)) FOR [IsActive]
GO


CREATE TABLE [dbo].[ProductMaster](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Name] [varchar](500) NULL,
	[Description] [varchar](max) NULL,
	[ImgUrl] [varchar](5000) NULL,
	[Quantity] [int] NULL,
	[Price] [decimal](18, 2) NULL,
	[isActive] [bit] NOT NULL,
	[CreatedOn] [datetime] NULL,
	[UpdatedOn] [datetime] NULL,
 CONSTRAINT [PK_ProductMaster] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO

ALTER TABLE [dbo].[ProductMaster] ADD  CONSTRAINT [DF_ProductMaster_isActive]  DEFAULT ((1)) FOR [isActive]
GO


CREATE TABLE [dbo].[ProductCatgoryMapping](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[productid] [int] NOT NULL,
	[categoryId] [int] NOT NULL,
 CONSTRAINT [PK_ProductCatgoryMapping] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[CategoryMaster](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Name] [varchar](500) NULL,
	[IsActive] [bit] NOT NULL,
	[CreatedOn] [datetime] NULL,
	[UpdatedOn] [datetime] NULL,
 CONSTRAINT [PK_CategoryMaster] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO

ALTER TABLE [dbo].[CategoryMaster] ADD  CONSTRAINT [DF_CategoryMaster_IsActive]  DEFAULT ((1)) FOR [IsActive]
GO



INSERT INTO [dbo].[ProductMaster]
           ([Name]
           ,[Description]
           ,[ImgUrl]
           ,[Quantity]
           ,[Price]
           ,[isActive]
           ,[CreatedOn]
           )
     VALUES
           ('FINE-WALED CORDUROY SHIRT'
           ,'Shirt with lapel collar and long sleeves. Front patch pocket. Front button closure.'
           ,'https://i.ibb.co/rMCwxdn/product-Img.jpg'
           ,20
           ,'100.20'
           ,1
           ,GETDATE()
          )

INSERT INTO [dbo].[ProductMaster]
           ([Name]
           ,[Description]
           ,[ImgUrl]
           ,[Quantity]
           ,[Price]
           ,[isActive]
           ,[CreatedOn]
           )
     VALUES
           ('LONG PLAID OVERSHIRT'
           ,'Shirt with lapel collar and long sleeves. Front patch pocket. Front button closure.'
           ,'https://i.ibb.co/rMCwxdn/product-Img.jpg'
           ,20
           ,'120.20'
           ,1
           ,GETDATE()
          )

INSERT INTO [dbo].[ProductMaster]
           ([Name]
           ,[Description]
           ,[ImgUrl]
           ,[Quantity]
           ,[Price]
           ,[isActive]
           ,[CreatedOn]
           )
     VALUES
           ('HERITAGE EXPEDITION SHIRT'
           ,'Shirt with lapel collar and long sleeves. Front patch pocket. Front button closure.'
           ,'https://i.ibb.co/rMCwxdn/product-Img.jpg'
           ,20
           ,'107.20'
           ,1
           ,GETDATE()
          )





INSERT INTO [dbo].[CategoryMaster]
           ([Name]
           
           ,[CreatedOn]
           )
     VALUES
           (
           'Shirt',
		   GETDATE()
           )

INSERT INTO [dbo].[CategoryMaster]
           ([Name]
           
           ,[CreatedOn]
           )
     VALUES
           (
           'Shoes',
		   GETDATE()
           )

INSERT INTO [dbo].[CategoryMaster]
           ([Name]
           
           ,[CreatedOn]
           )
     VALUES
           (
           'Laptop',
		   GETDATE()
           )



INSERT INTO [dbo].[ProductCatgoryMapping]
           ([productid]
           ,[categoryId])
     VALUES
           (3,1
         )


INSERT INTO [dbo].[ProductCatgoryMapping]
           ([productid]
           ,[categoryId])
     VALUES
           (2,1
         )

INSERT INTO [dbo].[ProductCatgoryMapping]
           ([productid]
           ,[categoryId])
     VALUES
           (1,1
         )



CREATE PROCEDURE SP_AddProductwithCategorymapping
	(@name varchar(1000) ='',
	@descr varchar(MAX) = '',
	@img varchar(5000)='',
	@Qnty int =0,
	@price decimal =0,
	@categoryId int = 0
	)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	DECLARE @ID INT= 0;

	SET NOCOUNT ON;

    INSERT INTO[dbo].[ProductMaster] ([Name],[Description],[ImgUrl],[Quantity],[Price],[isActive],[CreatedOn]) VALUES 
	(@name,@descr,@img,@Qnty,@price,1,GETDATE());

	SET @ID = (SELECT SCOPE_IDENTITY());

	INSERT INTO ProductCatgoryMapping SELECT @ID,@categoryId
	
END
GO